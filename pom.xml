<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.2.2</version>
        <relativePath/>
        <!-- lookup parent from repository -->
    </parent>
    <groupId>com.defers</groupId>
    <artifactId>spring-telemetry</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>spring-telemetry</name>
    <description>spring-telemetry</description>
    <properties>
        <java.version>17</java.version>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <spotless.version>2.43.0</spotless.version>
    </properties>

    <!--{If using  opentelemetry-spring-boot-starter-->
    <!--    <dependencyManagement>-->
    <!--        <dependencies>-->
    <!--            <dependency>-->
    <!--                <groupId>io.opentelemetry</groupId>-->
    <!--                <artifactId>opentelemetry-bom</artifactId>-->
    <!--                <version>1.35.0</version>-->
    <!--                <type>pom</type>-->
    <!--                <scope>import</scope>-->
    <!--            </dependency>-->
    <!--            <dependency>-->
    <!--                <groupId>io.opentelemetry.instrumentation</groupId>-->
    <!--                <artifactId>opentelemetry-instrumentation-bom-alpha</artifactId>-->
    <!--                <version>2.1.0-alpha</version>-->
    <!--                <type>pom</type>-->
    <!--                <scope>import</scope>-->
    <!--            </dependency>-->
    <!--        </dependencies>-->
    <!--    </dependencyManagement>-->
    <!--If using  opentelemetry-spring-boot-starter}-->

    <dependencies>
        <!-- For logging with ECS-stack compatible json format -->
        <dependency>
            <groupId>co.elastic.logging</groupId>
            <artifactId>logback-ecs-encoder</artifactId>
            <version>1.5.0</version>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry.instrumentation</groupId>
            <artifactId>opentelemetry-instrumentation-annotations</artifactId>
            <version>2.1.0</version>
        </dependency>
        <!--{If using  opentelemetry-spring-boot-starter-->
        <!--        <dependency>-->
        <!--            <groupId>io.opentelemetry.instrumentation</groupId>-->
        <!--            <artifactId>opentelemetry-spring-boot-starter</artifactId>-->
        <!--        </dependency>-->
        <!--If using  opentelemetry-spring-boot-starter}-->
        <!--        <dependency>-->
        <!--            <groupId>io.micrometer</groupId>-->
        <!--            <artifactId>micrometer-tracing-bridge-otel</artifactId>-->
        <!--        </dependency>-->
        <!--        <dependency>-->
        <!--            <groupId>io.opentelemetry</groupId>-->
        <!--            <artifactId>opentelemetry-exporter-otlp</artifactId>-->
        <!--        </dependency>-->
        <!-- Injects trace_id, span_id from javaagent opentelemetry logs via MDC to application logs -->
        <!--        <dependency>-->
        <!--            <groupId>io.opentelemetry.instrumentation</groupId>-->
        <!--            <artifactId>opentelemetry-logback-mdc-1.0</artifactId>-->
        <!--            <version>2.1.0-alpha</version>-->
        <!--        </dependency>-->
        <dependency>
            <groupId>org.modelmapper</groupId>
            <artifactId>modelmapper</artifactId>
            <version>3.2.0</version>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>2.1.0</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-activemq</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web-services</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
            <version>3.1.2</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.diffplug.spotless</groupId>
                <artifactId>spotless-maven-plugin</artifactId>
                <version>${spotless.version}</version>
                <configuration>
                    <java>
                        <!-- Cleanthat will refactor your code, but it may break your style: apply it before your formatter -->
                        <cleanthat>
                            <sourceJdk>${java.version}</sourceJdk>
                            <mutators>
                                <mutator>ErrorProneMutators</mutator>
                                <mutator>PMDMutators</mutator>
                                <mutator>SafeAndConsensual</mutator>
                                <mutator>SonarMutators</mutator>
                                <mutator>LocalVariableTypeInference</mutator>
                                <mutator>RemoveExplicitCallToSuper</mutator>
                                <mutator>UnnecessarySemicolon</mutator>
                                <mutator>UseTextBlocks</mutator>
                                <mutator>UseUnderscoresInNumericLiterals</mutator>
                            </mutators>
                            <excludedMutators>
                                <excludedMutator>AvoidInlineConditionals</excludedMutator>
                                <!-- You can discard specific rules -->
                            </excludedMutators>
                        </cleanthat>

                        <removeUnusedImports/>
                        <formatAnnotations/>
                        <palantirJavaFormat/>
                    </java>
                    <pom>
                        <sortPom>
                            <expandEmptyElements>false</expandEmptyElements>
                            <nrOfIndentSpace>4</nrOfIndentSpace>
                            <sortDependencies>scope,groupId,artifactId</sortDependencies>
                            <sortProperties>true</sortProperties>
                        </sortPom>
                    </pom>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>jaxb2-maven-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <arguments>
                        <argument>-wsdl</argument>
                    </arguments>
                    <sources>
                        <source>src/main/resources/static/server.wsdl</source>
                    </sources>
                    <xjbSources>
                        <xjbSource>src/main/resources/static/xjb-bindings.xjb</xjbSource>
                    </xjbSources>
                    <packageName>com.defers.springtelemetry.app.soap.dto</packageName>
                    <noPackageLevelAnnotations>true</noPackageLevelAnnotations>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>xjc</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
